#!/usr/bin/env escript

-define(GRIZZLY_DEP, {rebar_grizzly, ".*", {git, "https://github.com/SputnikTeam/rebar_grizzly.git"}}).

main([ConfigPath, AppsString, NodesString]) ->
    {ok, Config} = file:consult(ConfigPath),
    Apps = read_separated_attrs(AppsString),
    Nodes = read_separated_attrs(NodesString),

    ConfigOut = [
                 {plugins, [grizzly] },
                 {grizzly, [
                            {apply_for_apps, Apps},
                            {nodes, Nodes}
                           ]},
                  make_deps(Config) | lists:keydelete(deps, 1, Config)
                ],
    lists:foreach(
      fun(X) ->
              io:format("~p.~n", [X])
      end,
      ConfigOut);
main(["help"]) ->
    print_usage();
main(_Args) ->
    print_usage(),
    erlang:halt(1).

make_deps(Config) ->
    case proplists:get_value(deps, Config) of
        undefined ->
            {deps, [?GRIZZLY_DEP]};
        DepsIn ->
            {deps, [?GRIZZLY_DEP | DepsIn]}
    end.

read_separated_attrs(String) ->
    [list_to_atom(App) || App <- string:tokens(String, ":")].

print_usage() ->
    io:format("Usage: ~s <path to rebar.config> [grizzly apps]~n", [escript:script_name()]).

